Questão 1:

#include <iostream>
using namespace std;
int main()
{
    string N;
    cin >> N;
    if(N.find("1444") != string::npos){
        cout << N << " es de Mala Suerte" << endl;
    } else{
        cout << N << " NO es de Mala Suerte" << endl;
    }
    return 0;
}

Questão 2:

#include <iostream>
using namespace std;
int main()
{
    int x;
    cin >> x;
    for(int i = 0; i < x; i++){
        cout << "Ho ";
    }
    cout << "IBMEC 2024!" << endl;
    return 0;
}

Questão 3:

#include <iostream>
#include <sstream>
using namespace std;
bool eTautograma(string frase){
    stringstream ss(frase);
    string palavra;
    char letraInicial;
    bool primeiraPalavra = true;
    while (ss >> palavra) {
        char letraAtual = tolower(palavra[0]);
        if (primeiraPalavra) {
            letraInicial = letraAtual;
            primeiraPalavra = false;
        } else {
            if (letraAtual != letraInicial) {
                return false; 
            }
        }
    }
    return true; 
}
int main()
{
    string frase;
    getline(cin,frase);
    if (eTautograma(frase)) {
        cout << 'Y' << endl;
    } else {
        cout << 'N' << endl;
    }
    return 0;
}

Questão 4:

#include <iostream>
using namespace std;
int main()
{
    double vet[15];
    int negativos;
    for(int i = 0; i < 15; i++){
        cin >> vet[i];
        if(vet[i] < 0){
            negativos++;
        }
    }
    cout << negativos << " valores negativos" << endl;
    return 0;
}

Questão 5:

int main(){
    Veiculo meuVeiculo("Toyota","Etios",2019,"Branco",50000.00);
    
    cout << "Detalhes do veículo:" << endl;
    meuVeiculo.exibir_detalhes();
    cout << endl;

    cout << "Depreciação após 3 anos:" << endl;
    meuVeiculo.calcular_depreciacao(3);
    cout << endl;

    cout << "Mudança de cor:" << endl;
    meuVeiculo.pintar("Vermelho");
    cout << endl;

    cout << "Aumento de preço:" << endl;
    meuVeiculo.aumentar_preco(5000.00);
    cout << endl;
    
    cout << "Atualização de modelo:" << endl;
    meuVeiculo.atualizar_modelo("Corolla Altis");
    cout << endl;
    
    cout << "Detalhes do veículo após atualizações:" << endl;
    meuVeiculo.exibir_detalhes();
    
    return 0;
}

Questão 6:

#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
using namespace std;
class ListaDeCompras {
public:
    vector<string> itens;
    
    void adcionarItem(const string& item){
        itens.push_back(item);
        cout << item << " adicionado à lista." << endl;
    }
    void removerItem(const string& item) {
        auto it = find(itens.begin(), itens.end(), item);
        if (it != itens.end()) {
            itens.erase(it);
            cout << item << " removido da lista." << endl;
        } else {
            cout << item << " não encontrado na lista." << endl;
        }
    }
    void exibirLista(){
        if (itens.empty()) {
            cout << "A lista de compras está vazia." << endl;
            return;
        }
        cout << "Lista de Compras:" << endl;
        for (const auto& item : itens) {
            cout << "- " << item << endl;
        }
    }
    void limparLista(){
        itens.clear();
        cout << "Lista de compras limpa." << endl;
    }
};
int main(){
    ListaDeCompras lista;
    
    lista.adcionarItem("Batom");
    lista.adcionarItem("Chapéu");
    lista.adcionarItem("Batata");
    lista.adcionarItem("Guarda-Chuva");
    
    lista.exibirLista();
    cout << endl;
    
    lista.removerItem("Batom");
    
    lista.exibirLista();
    cout << endl;
    
    lista.limparLista();
    
    lista.exibirLista();
    return 0;
}

Questão 7:

#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
using namespace std;
 class Escola {
public:
    vector<string> aluno;
    
    void adcionaAluno(const string& alunos){
        aluno.push_back(alunos);
        cout << alunos << " está matriculado!" << endl;
    } 

    void removeAluno(const string& alunos){
        auto it = find(aluno.begin(), aluno.end(), alunos);
        if(it != aluno.end()){
            aluno.erase(it);
            cout << alunos << " teve sua matricula removida." << endl;
        } else {
            cout << alunos << " não foi encontrado no sistema." << endl;
        }
    }
    
    void exibeAluno(){
        if(aluno.empty()){
            cout << "Não há alunos matriculados." << endl;
        } else {
            cout << "Lista de alunos:" << endl;
            for(const auto& alunos : this -> aluno) {
                cout << "- " << alunos << endl;
            }
        }
    }
};

int main(){
    Escola escola;
    escola.adcionaAluno("Gabriel Miler Moura da Silva");
    cout << endl;
    escola.exibeAluno();
    cout << endl;
    escola.removeAluno("Gabriel Miler Moura da Silva");
    cout << endl;
    escola.exibeAluno();
    return 0;
}
